openapi: 3.0.1
info:
  title: Public API Documentation
  description: Public API documentation aims to describe the Public API endpoints.
  license:
    name: EUPL
    url: https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
  version: 1.1.6
servers:
  - description: Generated server url
    url: https://enotices2.ted.europa.eu/esenders
security:
  - esenders-token: []
paths:
  /api/v2/notice/notices/{businessId}/validation-report:
    get:
      tags:
        - Notice
      summary: Retrieve the notice validation report.
      operationId: getValidationReport
      parameters:
        - name: businessId
          in: path
          description: the notice business identifier (notice identifier - version)
          required: true
          schema:
            type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6-01
      responses:
        '200':
          description: Provides the notice validation report in SVRL (Schematron Validation Report Language) format.
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '404':
          description: Notice or notice report was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
  /api/v2/notice/notices/{businessId}/stop-publication-esentool:
    post:
      tags:
        - Notice
      summary: Stop the notice publication.
      operationId: stopPublicationEsentool
      parameters:
        - name: businessId
          in: path
          description: the notice business identifier (notice identifier - version)
          required: true
          schema:
            type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6-01
      responses:
        '200':
          description: The publication of the notice has been stopped.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EsentoolNoticeDto'
        '404':
          description: Notice was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionBody'
  /api/v2/notice/notices/submit:
    post:
      tags:
        - Notice
      summary: Submit XML notice
      operationId: submitNotice
      parameters:
        - name: esenderAuthor
          description: the metadata that is used to identify the original author of the notice.
          schema:
            $ref: '#/components/schemas/EsenderAuthor'
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - esenderAuthor
                - notice
              type: object
              properties:
                notice:
                  type: string
                  format: binary
                esenderAuthor:
                  $ref: '#/components/schemas/EsenderAuthor'
      responses:
        '201':
          description: The notice is created. If CVS validation succeeds, the notice is submitted for publication. Otherwise, is not submitted for publication and report validation can be retrieved from 'cvsLink' response property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XmlNoticeSubmissionDto'
  /api/v2/notice/notices/search-esentool:
    get:
      tags:
        - Notice
      summary: Search procedures.
      operationId: searchProceduresEsentool
      parameters:
        - name: page
          in: query
          description: the current page of results
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          description: the size of the page
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
        - name: sortProperty
          in: query
          description: the property to use to sort the results
          required: false
          schema:
            type: string
            enum:
              - id
              - versionId
              - procedureId
              - status
              - updatedAt
              - submittedAt
              - publicationId
              - publicationDate
              - noticeType
              - legalBasis
        - name: sortDirection
          in: query
          description: the sort direction, ascending (ASC) or descending (DESC)
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: searchNoticesEsentool
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchNoticesEsentool'
      responses:
        '200':
          description: All notices based on filters. Even if 0 results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EsentoolPageDtoEsentoolNoticeDto'
components:
  schemas:
    ExceptionBody:
      type: object
      properties:
        code:
          type: string
          description: the exception code.
          example: notice.NOTICE_NOT_FOUND
        message:
          type: string
          description: the exception message.
          example: No notice found
    EsentoolNoticeDto:
      type: object
      properties:
        id:
          type: string
          description: the notice identifier (without the version).
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        versionId:
          type: string
          description: the version identifier.
          example: '01'
        procedureId:
          type: string
          description: the procedure identifier.
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa5
        status:
          $ref: '#/components/schemas/NoticeStatus'
        updatedAt:
          type: string
          description: the notice updated date/time.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        submittedAt:
          type: string
          description: the notice submitted date/time.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        publicationId:
          type: string
          description: the notice publication identifier.
        publicationDate:
          type: string
          description: the notice publication date.
          format: date
        noticeType:
          type: string
          description: the notice notice type.
        legalBasis:
          type: string
          description: the notice legal basis code.
        languages:
          type: array
          description: the notice languages.
          items:
            type: string
            description: the notice languages.
    NoticeStatus:
      type: string
      description: the notice status.
      enum:
        - DRAFT
        - SUBMITTED
        - STOPPED
        - PUBLISHING
        - PUBLISHED
        - DELETED
        - NOT_PUBLISHED
        - CONVERTED_FROM_PUBLISHED
        - ARCHIVED
        - VALIDATION_FAILED
    EsenderAuthor:
      type: object
      properties:
        noticeAuthorEmail:
          type: string
          description: the notice author email.
          example: john@doe.com
        noticeAuthorLocale:
          type: string
          description: the notice author locale.
          example: en
    XmlNoticeSubmissionDto:
      type: object
      properties:
        cvsLink:
          type: string
          description: the link to use to retrieve the CVS report
        success:
          type: boolean
          description: the status of the submission. True if success, otherwise false.
    SearchNoticesEsentool:
      type: object
      properties:
        id:
          type: string
          description: the notice identifier (without the version).
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        versionId:
          type: string
          description: the version identifier.
          example: '01'
        submittedAfter:
          type: string
          description: the minimum date/time value used to find notices submitted after this point.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        submittedBefore:
          type: string
          description: the maximum date/time value used to find notices submitted before this point.
          format: date-time
          example: '2022-12-01T23:00:00Z'
        publishedAfter:
          type: string
          description: the minimum date/time value used to find notices published after this point.
          format: date-time
          example: '2022-01-01T13:15:55.89Z'
        publishedBefore:
          type: string
          description: the maximum date/time value used to find notices published before this point.
          format: date-time
          example: '2022-12-01T23:00:00Z'
        statuses:
          type: array
          description: the list of status to include in the search
          items:
            type: string
            description: the list of status to include in the search
            enum:
              - DRAFT
              - SUBMITTED
              - STOPPED
              - PUBLISHING
              - PUBLISHED
              - DELETED
              - NOT_PUBLISHED
              - CONVERTED_FROM_PUBLISHED
              - ARCHIVED
              - VALIDATION_FAILED
    EsentoolPageDtoEsentoolNoticeDto:
      type: object
      properties:
        totalSize:
          type: integer
          description: the total size of entities found.
          format: int64
          example: 99
        content:
          type: array
          description: the content of entities found.
          items:
            $ref: '#/components/schemas/EsentoolNoticeDto'
  securitySchemes:
    esenders-token:
      type: http
      name: esenders-token
      description: API Key generated using TED API
      scheme: bearer
      bearerFormat: JWT
